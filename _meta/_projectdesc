name     = "anise"
version  = "1.0"
authors  = ["Josef Hahn"]
summary  = "one software project administration tool for all environments"
license  = licensing.GPLv3
email    = "anise2013@ginger.ws"
keywords = "python software development documentation packaging deployment task execution"
maturity = projectdata.Maturity.ProductionStable

basecolor = (0.3, 0.2, 0.0)

longdescription = """
Anise helps you to implement a common mechanism for executing all automated tasks for all your software projects.
The usage scenario is a developer (or a team) working on many different projects with different frameworks
and different tools. Anise can streamline such a chaos of tools. Typical tasks you would add to an anise-aware
project can be:

- generating documentation
- creating packages
- handling version information
  - e.g. print it in the manual
- creating a homepage automatically built from the available
  version information, the packages, the documentation and so on
- deploying this homepage to a web server
- unit testing
- ... or whatever your project needs

Anise provides a Python based infrastructure, while you will need to implement some parts in order to adapt the
behavior to your project's needs. Anise contains some ready-to-use implementations for some tasks (like
building binaries via qmake, debian and some other packages, svn interaction, doxygen, ...), so you can directly
use it without non-trivial additional coding to do all kinds of stuff, including generating documentations,
packages and a homepage. However, chances are good that you will have to help out with some own implementations.

Your part as a project developer is to create a *project description* file, which contains all project metadata and
custom implementations of some tasks, and add this file to your project.
"""

versioncontrol.svn.is_svn_controlled()

documentation.has_doxygen_developerdocumentation()
readme_pdf_include_developer_doc = True

makehomepage = homepage.tasks.makehomepage
releasing.releasetasks.add(sshfiletransfer.tasks.upload, source=TaskExecution(makehomepage))

datainjections.pool.add(datainjections.tasks.inject_python, outfile="anise/framework/projectinformations.py",
                   do_in_source=True)

distributables.pool.addgroup(packages.tasks.tarpackage, name="source tarball", linkto="../anise.tgz")

distributables.pool.addgroup(packages.debian.tasks.debpackage, name="Debian/Ubuntu package",
                   executablelinks={"anise": "/usr/lib/anise/anise.py"},
                   source={"/usr/lib/{name}": TaskExecution(packages.debian.tasks.only_programfiles)})

distributables.pool.addgroup(packages.python.tasks.wheelpackage, name="Python wheel package",
                   applicationlinks=[packages.python.WheelApplicationLink(linkname="anise",
                                                                          module="anise.framework.engine",
                                                                          method="main", gui=False)])

distributables.pool.addgroup(packages.win32.tasks.win32exepackage, name="Windows package")

dependencies.pool.add(dependencies.python.PythonDependency(dependencies.Type.Required, "3.4"))

dependencies.pool.add(dependencies.Dependency(dependencies.Type.Recommended_HasAlternatives, "Typical GNU/Linux Desktop", "", "linux"))

dependencies.pool.add(dependencies.Dependency(dependencies.Type.Optional, "subversion", "", "svn"))

dependencies.pool.add(dependencies.Dependency(dependencies.Type.Included, "banner image",
    "_meta/homepage_bannerimage.png; license [CC BY-SA 3.0](http://creativecommons.org/licenses/by-sa/3.0); copied from [here](http://en.wikipedia.org/wiki/File:Aniseed_p1160018.jpg).",
    "artwork"))

